name: Deploy with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: project  # Fetches secrets & vars from the 'project' environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file from environment secrets/vars
        run: |
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "MYSQL_DATABASE=${{ vars.MYSQL_DATABASE }}" >> .env
          
          echo "BACKEND_PORT=${{ vars.BACKEND_PORT }}" >> .env
          echo "BACKEND_HOST=${{ vars.BACKEND_HOST }}" >> .env
          echo "FRONTEND_PORT=${{ vars.FRONTEND_PORT }}" >> .env
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> .env
          echo "DOCKER_TAG=${{ vars.DOCKER_TAG }}" >> .env
          echo "IMAGE_NAME=${{ vars.IMAGE_NAME }}" >> .env

      - name: Debug .env (keys only, no secrets)
        run: |
          echo "Environment variables loaded:"
          cat .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build & Push Docker Images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${{ vars.DOCKER_TAG }} ./backend
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}-frontend:${{ vars.DOCKER_TAG }} ./frontend
          
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}:${{ vars.DOCKER_TAG }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.IMAGE_NAME }}-frontend:${{ vars.DOCKER_TAG }}

      - name: Deploy with Docker Compose
        run: docker compose up -d --build

      - name: Show container logs
        run: |
          echo "===== BACKEND LOGS ====="
          docker logs --tail=100 backend || true
          echo "===== FRONTEND LOGS ====="
          docker logs --tail=100 frontend || true
          echo "===== MYSQL LOGS ====="
          docker logs --tail=100 mysql || 
                - name: Wait for containers to start
        run: sleep 10

      - name: Show container status
        run: docker ps -a

      - name: Show Backend Logs
        run: docker logs backend || echo "No backend logs found"

      - name: Show Frontend Logs
        run: docker logs frontend || echo "No frontend logs found"

      - name: Show MySQL Logs
        run: docker logs mysql || echo "No mysql logs found"

